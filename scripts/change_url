#!/bin/bash

#=================================================
# GENERIC START
#=================================================

# IMPORT GENERIC HELPERS
source /usr/share/yunohost/helpers

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

# Import common cmd
source ./_common.sh
#=================================================
# RETRIEVE ARGUMENTS
#=================================================

old_domain=$YNH_APP_OLD_DOMAIN
old_path=$YNH_APP_OLD_PATH

new_domain=$YNH_APP_NEW_DOMAIN
new_path=$YNH_APP_NEW_PATH

app=$YNH_APP_INSTANCE_NAME

port=$(ynh_app_setting_get "$app" web_port)
portUnicorn=$(ynh_app_setting_get "$app" unicorn_port)

#=================================================
# CHECK PATHS SYNTAX
#=================================================

test -n "$old_path" || old_path="/"
test -n "$new_path" || new_path="/"
new_path=$(ynh_normalize_url_path $new_path)
old_path=$(ynh_normalize_url_path $old_path)

domain="$new_domain"
path_url="$new_path"


#=================================================
# CHECK WHICH PARTS SHOULD BE CHANGED
#=================================================

change_domain=0
if [ "$old_domain" != "$new_domain" ]
then
	change_domain=1
fi

change_path=0
if [ "$old_path" != "$new_path" ]
then
	change_path=1
fi

#doc in: https://docs.gitlab.com/omnibus/settings/configuration.html#configuring-the-external-url-for-gitlab

# Gitlab configuration
nginx_conf_path=/etc/nginx/conf.d/$old_domain.d/$app.conf
gitlab_conf_path=/etc/gitlab/gitlab.rb

if [ $change_path -eq 1 ]
then
  sudo gitlab-ctl stop unicorn
  sudo gitlab-ctl stop sidekiq
fi

# Change the domain for nginx
if [ $change_domain -eq 1 ]
then
  # Delete file checksum for the old conf file location
  ynh_delete_file_checksum "$nginx_conf_path"

  ynh_secure_remove "$nginx_conf_path"
fi

config_nginx

config_gitlab

sudo gitlab-ctl reconfigure

if [ $change_path -eq 1 ]
then
  sudo gitlab-ctl restart
fi
