#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

#Keep this path for calling _common.sh inside the execution's context of backup and restore scripts
source ../settings/scripts/_common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	### Remove this function if there's nothing to clean before calling the remove script.
	true
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading installation settings..." --weight=1

app=$YNH_APP_INSTANCE_NAME

final_path=$(ynh_app_setting_get --app=$app --key=final_path)
config_path=$(ynh_app_setting_get --app=$app --key=config_path)
domain=$(ynh_app_setting_get --app=$app --key=domain)

backup_db=$(ynh_app_setting_get --app="$app" --key=backup_db)
backup_uploads=$(ynh_app_setting_get --app="$app" --key=backup_uploads)
backup_repositories=$(ynh_app_setting_get --app="$app" --key=backup_repositories)
backup_builds=$(ynh_app_setting_get --app="$app" --key=backup_builds)
backup_artifacts=$(ynh_app_setting_get --app="$app" --key=backup_artifacts)
backup_lfs=$(ynh_app_setting_get --app="$app" --key=backup_lfs)
backup_registry=$(ynh_app_setting_get --app="$app" --key=backup_registry)
backup_pages=$(ynh_app_setting_get --app="$app" --key=backup_pages)

#=================================================
# STANDARD BACKUP STEPS
#=================================================
# BACKUP THE NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Backing up nginx web server configuration..." --weight=1

ynh_backup --src_path="/etc/nginx/conf.d/$domain.d/$app.conf"

#=================================================
# BACKUP GITLAB DATABASE
#=================================================
ynh_script_progression --message="Backuping of Gitlab..." --weight=9

to_skip=""

if [ $backup_db -eq 1 ]; then
	to_skip="db,"$to_skip
fi

if [ $backup_uploads -eq 1 ]; then
	to_skip="uploads,"$to_skip
fi

if [ $backup_repositories -eq 1 ]; then
	to_skip="repositories,"$to_skip
fi

if [ $backup_builds -eq 1 ]; then
	to_skip="builds,"$to_skip
fi

if [ $backup_artifacts -eq 1 ]; then
	to_skip="artifacts,"$to_skip
fi

if [ $backup_lfs -eq 1 ]; then
	to_skip="lfs,"$to_skip
fi

if [ $backup_registry -eq 1 ]; then
	to_skip="registry,"$to_skip
fi

if [ $backup_pages -eq 1 ]; then
	to_skip="pages,"$to_skip
fi

# Use gitlab-rake to backup
# For the complete doc: https://docs.gitlab.com/ce/raketasks/backup_restore.html
# For the filename: https://docs.gitlab.com/ce/raketasks/backup_restore.html#backup-filename
# For the backup strategy: https://docs.gitlab.com/ce/raketasks/backup_restore.html#excluding-specific-directories-from-the-backup
gitlab-rake gitlab:backup:create BACKUP=last SKIP=$to_skip

ynh_backup --src_path="/var/opt/$app/backups/last_gitlab_backup.tar"

#=================================================
# BACKUP CONF FILES
#=================================================
ynh_script_progression --message="Backuping configuration files of Gitlab..." --weight=1

ynh_backup --src_path="$config_path/gitlab-secrets.json"
ynh_backup --src_path="$config_path/gitlab.rb"
ynh_backup --src_path="$config_path/gitlab-persistent.rb"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Backup script completed for $app. (YunoHost will then actually copy those files to the archive)." --last
