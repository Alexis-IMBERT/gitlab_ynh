#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source scripts/_common.sh
source /usr/share/yunohost/helpers

#=================================================
# RETRIEVE ARGUMENTS
#=================================================

# Get is_public
is_public=${YNH_ACTION_IS_PUBLIC}

app=${YNH_APP_INSTANCE_NAME:-$YNH_APP_ID}

#=================================================
# CHECK IF ARGUMENTS ARE CORRECT
#=================================================

#=================================================
# CHECK IF AN ACTION HAS TO BE DONE
#=================================================

is_public_old=$(ynh_app_setting_get $app is_public)

if [ $is_public -eq $is_public_old ]
then
	ynh_die "is_public is already set as $is_public." 0
fi

#=================================================
# SPECIFIC ACTION
#=================================================
# MOVE TO PUBLIC OR PRIVATE
#=================================================
if [ $is_public -eq 0 ]; then
	public_private="private"
else
	public_private="public"
fi
ynh_print_info --message="Moving the application to $public_private..."

# Make app public if necessary
if [ $is_public -eq 0 ]; then
	ynh_app_setting_delete $app unprotected_uris
else
	# unprotected_uris allows SSO credentials to be passed anyway.
	ynh_app_setting_set $app unprotected_uris "/"
fi

ynh_print_info --message="Reconfiguring SSOwat..."
# Regen ssowat configuration
yunohost app ssowatconf

# Update the config of the app
ynh_app_setting_set $app is_public $is_public

#=================================================
# RELOAD NGINX
#=================================================
ynh_print_info --message="Reloading nginx web server..."

ynh_systemd_action --action=reload --service_name=nginx

#=================================================
# END OF SCRIPT
#=================================================

ynh_print_info --message="Execution completed"